{"ast":null,"code":"var _jsxFileName = \"/Users/mihail/Trello_react/my-app/src/components/input/input.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input(props) {\n  _s();\n\n  const {\n    type,\n    placeholder,\n    changeFunc,\n    name,\n    value,\n    key,\n    title,\n    options\n  } = props;\n  const [realType, setRealType] = useState(type);\n\n  const switchType = () => {\n    if (realType === 'password') {\n      setRealType('text');\n    } else {\n      setRealType('password');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"form__label\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__label__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), options ? /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      value: value,\n      onChange: e => changeFunc(e),\n      children: Object.entries(options).map(el => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: el[0],\n          children: el[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }, this);\n      })\n    }, \"sex\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      name: name,\n      type: realType,\n      placeholder: placeholder,\n      value: value,\n      onChange: e => changeFunc(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this), type === \"password\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__switcher hidden\",\n      onClick: switchType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Input, \"lKnRR5XcUCuDRRfPm5nEjUwYAkY=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/mihail/Trello_react/my-app/src/components/input/input.js"],"names":["useState","Input","props","type","placeholder","changeFunc","name","value","key","title","options","realType","setRealType","switchType","e","Object","entries","map","el"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,IAAjC;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA,GAA9C;AAAmDC,IAAAA,KAAnD;AAA0DC,IAAAA;AAA1D,MAAsER,KAA5E;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACG,IAAD,CAAxC;;AAGA,QAAMU,UAAU,GAAG,MAAM;AACrB,QAAGF,QAAQ,KAAK,UAAhB,EAA2B;AACvBC,MAAAA,WAAW,CAAC,MAAD,CAAX;AACH,KAFD,MAEK;AACDA,MAAAA,WAAW,CAAC,UAAD,CAAX;AACH;AACJ,GAND;;AAQA,sBACI;AAAiB,IAAA,SAAS,EAAC,aAA3B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCH;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,OAAO,gBACJ;AAAQ,MAAA,IAAI,EAAEJ,IAAd;AAAoB,MAAA,KAAK,EAAEC,KAA3B;AAA4C,MAAA,QAAQ,EAAEO,CAAC,IAAIT,UAAU,CAACS,CAAD,CAArE;AAAA,gBACKC,MAAM,CAACC,OAAP,CAAeN,OAAf,EAAwBO,GAAxB,CAA4BC,EAAE,IAAI;AAC/B,4BAAO;AAAQ,UAAA,KAAK,EAAEA,EAAE,CAAC,CAAD,CAAjB;AAAA,oBAAuBA,EAAE,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL,OAAsC,KAAtC;AAAA;AAAA;AAAA;AAAA,YADI,gBAML;AAAO,MAAA,IAAI,EAAEZ,IAAb;AAAmB,MAAA,IAAI,EAAEK,QAAzB;AAAmC,MAAA,WAAW,EAAEP,WAAhD;AAA6D,MAAA,KAAK,EAAEG,KAApE;AAA2E,MAAA,QAAQ,EAAEO,CAAC,IAAIT,UAAU,CAACS,CAAD;AAApG;AAAA;AAAA;AAAA;AAAA,YARP,EAUKX,IAAI,KAAG,UAAP,gBACG;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,OAAO,EAAEU;AAAhD;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,KAAYL,GAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA9BuBP,K;;KAAAA,K","sourcesContent":["import {useState} from 'react'\n\n\nexport default function Input(props){\n    const { type, placeholder, changeFunc, name, value, key, title, options } = props\n    const [realType, setRealType] = useState(type)\n\n\n    const switchType = () => {\n        if(realType === 'password'){\n            setRealType('text')\n        }else{\n            setRealType('password')\n        }\n    }\n\n    return (\n        <label key={key} className=\"form__label\">\n            <div className=\"form__label__title\">{title}</div>\n            {options \n            ?   <select name={name} value={value} key=\"sex\" onChange={e => changeFunc(e)}>\n                    {Object.entries(options).map(el => {\n                        return <option value={el[0]}>{el[1]}</option>\n                    })}\n                </select>\n             : <input name={name} type={realType} placeholder={placeholder} value={value} onChange={e => changeFunc(e)}/>\n            }\n            {type===\"password\" \n            ?   <div className=\"form__switcher hidden\" onClick={switchType}></div>\n            :   <div></div>\n            }\n        </label>\n    )\n}"]},"metadata":{},"sourceType":"module"}