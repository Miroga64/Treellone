{"ast":null,"code":"var _jsxFileName = \"/Users/mihail/Trello_react/my-app/src/components/form/form.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { setUser } from './formSlice';\nimport Input from '../input/input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const dispatch = useDispatch();\n  const inputPass = useRef(null);\n  const [inputValues, setInputValues] = useState({\n    login: {\n      value: '',\n      type: 'text',\n      placeholder: 'Логин',\n      name: 'login'\n    },\n    name: {\n      value: '',\n      type: 'text',\n      placeholder: 'Имя',\n      name: 'name'\n    },\n    email: {\n      value: '',\n      type: 'text',\n      placeholder: 'Почта',\n      name: 'email'\n    },\n    password: {\n      value: '',\n      type: 'repeatPass',\n      placeholder: 'password',\n      name: 'password'\n    },\n    repeatPass: {\n      value: '',\n      type: 'repeatPass',\n      placeholder: 'repeatPass',\n      name: 'repeatPass'\n    },\n    surName: {\n      value: '',\n      type: 'surName',\n      placeholder: 'surName',\n      name: 'surName'\n    },\n    age: {\n      value: '',\n      type: 'age',\n      placeholder: 'age',\n      name: 'age'\n    },\n    sex: {\n      value: '',\n      type: 'text',\n      placeholder: 'sex',\n      name: 'sex',\n      options: {\n        Male: 'Мужской',\n        Female: 'Женский'\n      }\n    },\n    city: {\n      value: '',\n      type: 'city',\n      placeholder: 'city',\n      name: 'city',\n      options: {\n        Ufa: 'Уфа',\n        Another: 'Другой'\n      }\n    },\n    number: {\n      value: '',\n      type: 'number',\n      placeholder: 'number',\n      name: 'number'\n    }\n  });\n\n  const setNewUser = () => {\n    dispatch(setUser(inputValues));\n  };\n\n  const inputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value);\n    setInputValues({ ...inputValues,\n      [name]: value\n    });\n  };\n\n  const togglePassVisible = () => {\n    if (inputPass.current.type === \"password\") {\n      inputPass.current.type = \"text\";\n    } else {\n      inputPass.current.type = \"password\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form registration\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__title\",\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [Object.entries(inputValues).map((el, i) => {\n        const inputVal = inputValues[el[0]];\n        return /*#__PURE__*/_jsxDEV(Input, {\n          type: inputVal.type,\n          placeholder: inputVal.placeholder,\n          changeFunc: inputChange,\n          name: inputVal.name,\n          value: inputVal.value,\n          options: inputVal.options ? inputVal.options : null\n        }, i + inputVal.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, \"submit\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: setNewUser,\n        className: \"come_in\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"E83FgP6bHXjmDhQpt2gyztMRHEA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n{\n  /* <label className=\"form__label\">\n                     <div className=\"form__label__title\">* Логин</div>\n                     <input type=\"text\" value={login} key=\"login\" onChange={e => setLogin(e.target.value)} placeholder=\"helloworld\"/>\n                 </label>\n                 <label className=\"form__label\">\n                     <div className=\"form__label__title\">* Имя</div>\n                     <input type=\"text\" value={name} key=\"name\" onChange={e => setName(e.target.value)}  placeholder=\"Евгений Петров\"/>\n                 </label>\n                 <label className=\"form__label\">\n                     <div className=\"form__label__title\">* E-mail</div>\n                     <input type=\"text\" value={email} key=\"email\" onChange={e => setEmail(e.target.value)} placeholder=\"evgeny.petrov@gmail.com\"/>\n                 </label>\n                 <div className=\"form__label\">\n                     <div className=\"form__label__title\">* Пароль</div>\n                     <input type=\"password\" ref={inputPass} key=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"\"/>\n                     <div className=\"form__switcher hidden\" onClick={togglePassVisible}></div>\n                 </div>\n                 <div className=\"form__label\">\n                     <div className=\"form__label__title\">* Повторите пароль</div>\n                     <input type=\"password\" key=\"repeatPass\" value={repeatPass} onChange={e => setRepeatPass(e.target.value)}/>\n                 </div>\n                 <div className=\"form__more\">\n                     <div className=\"form__more__container\">\n                         <label className=\"form__label\">\n                             <div className=\"form__label__title\">Фамилия</div>\n                             <input type=\"text\" key=\"surName\" placeholder=\"Петров\" value={surName} onChange={e => setSurName(e.target.value)}/>\n                         </label>\n                         <label className=\"form__label\">\n                             <div className=\"form__label__title\">Возраст</div>\n                             <input type=\"text\" key=\"age\" value={age} onChange={e => setAge(e.target.value)} placeholder=\"21 год\"/>\n                         </label>\n                         <label className=\"form__label\">\n                             <div className=\"form__label__title\">Пол</div>\n                             <select value={sex} key=\"sex\" onChange={e => setSex(e.target.value)}>\n                                 <option value=\"Male\">Мужской</option>\n                                 <option value=\"Female\">Женский</option>\n                             </select>\n                         </label>\n                         <label className=\"form__label\">\n                             <div className=\"form__label__title\">Город</div>\n                             <select value={city} key=\"city\" onChange={e => setCity(e.target.value)}>\n                                 <option value=\"Ufa\">Уфа</option>\n                                 <option value=\"Another\">Другие города</option>\n                             </select>\n                         </label>\n                         <label className=\"form__label\">\n                             <div className=\"form__label__title\">Телефон</div>\n                             <input type=\"text\" key=\"number\" value={number} onChange={e => setNumber(e.target.value)} placeholder=\"+7(800) 555-55-55\"/>\n                         </label>\n                     </div>\n                     <div className=\"form__more__title\"></div>\n                 </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mihail/Trello_react/my-app/src/components/form/form.js"],"names":["useRef","useState","useDispatch","setUser","Input","Form","dispatch","inputPass","inputValues","setInputValues","login","value","type","placeholder","name","email","password","repeatPass","surName","age","sex","options","Male","Female","city","Ufa","Another","number","setNewUser","inputChange","e","target","console","log","togglePassVisible","current","Object","entries","map","el","i","inputVal"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\"\nimport { useDispatch } from 'react-redux';\nimport { setUser } from './formSlice'\nimport Input from '../input/input'\n\nexport default function Form(){\n    const dispatch = useDispatch();\n    const inputPass = useRef(null)\n\n    const [inputValues, setInputValues] = useState({\n        login: {\n            value: '', \n            type: 'text', \n            placeholder: 'Логин',\n            name: 'login',\n        }, \n        name: {\n            value: '', \n            type: 'text', \n            placeholder: 'Имя',\n            name: 'name',\n        }, \n        email: {\n            value: '', \n            type: 'text', \n            placeholder: 'Почта',\n            name: 'email',\n        }, \n        password: {\n            value: '', \n            type: 'repeatPass', \n            placeholder: 'password',\n            name: 'password',\n        }, \n        repeatPass: {\n            value: '', \n            type: 'repeatPass', \n            placeholder: 'repeatPass',\n            name: 'repeatPass',\n        }, \n        surName: {\n            value: '', \n            type: 'surName', \n            placeholder: 'surName',\n            name: 'surName',\n        }, \n        age: {\n            value: '', \n            type: 'age', \n            placeholder: 'age',\n            name: 'age',\n        }, \n        sex: {\n            value: '', \n            type: 'text', \n            placeholder: 'sex',\n            name: 'sex',\n            options: {\n                Male: 'Мужской',\n                Female: 'Женский',\n            }\n        }, \n        city: {\n            value: '', \n            type: 'city', \n            placeholder: 'city',\n            name: 'city',\n            options: {\n                Ufa: 'Уфа',\n                Another: 'Другой',\n            }\n        }, \n        number: {\n            value: '', \n            type: 'number', \n            placeholder: 'number',\n            name: 'number',\n        },\n    });\n\n    const setNewUser = () => {\n\n        dispatch(setUser(inputValues))\n    }\n\n    const inputChange = (e) => {\n        const { name, value } = e.target;\n        console.log(name, value)\n        setInputValues({ ...inputValues, [name]: value });\n    }\n\n\n    const togglePassVisible = () => {\n        if(inputPass.current.type === \"password\"){\n            inputPass.current.type = \"text\"\n        }else{\n            inputPass.current.type = \"password\"\n        }\n    }\n\n    return(\n        <div className=\"form registration\">\n            <div className=\"form__title\">Регистрация</div>\n            <form >\n                {Object.entries(inputValues).map((el, i) => {\n                    const inputVal = inputValues[el[0]];\n                    return <Input \n                        type={inputVal.type}\n                        placeholder={inputVal.placeholder}\n                        changeFunc={inputChange}\n                        name={inputVal.name}\n                        key={i+inputVal.name}\n                        value={inputVal.value}\n                        options={inputVal.options ? inputVal.options : null}\n                    />\n                })}\n                <input key=\"submit\" type=\"submit\" value=\"Зарегистрироваться\"/>\n                <span onClick={setNewUser} className=\"come_in\">Войти</span>\n            </form>\n        </div>\n    )\n}\n\n\n{/* <label className=\"form__label\">\n                    <div className=\"form__label__title\">* Логин</div>\n                    <input type=\"text\" value={login} key=\"login\" onChange={e => setLogin(e.target.value)} placeholder=\"helloworld\"/>\n                </label>\n                <label className=\"form__label\">\n                    <div className=\"form__label__title\">* Имя</div>\n                    <input type=\"text\" value={name} key=\"name\" onChange={e => setName(e.target.value)}  placeholder=\"Евгений Петров\"/>\n                </label>\n                <label className=\"form__label\">\n                    <div className=\"form__label__title\">* E-mail</div>\n                    <input type=\"text\" value={email} key=\"email\" onChange={e => setEmail(e.target.value)} placeholder=\"evgeny.petrov@gmail.com\"/>\n                </label>\n                <div className=\"form__label\">\n                    <div className=\"form__label__title\">* Пароль</div>\n                    <input type=\"password\" ref={inputPass} key=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"\"/>\n                    <div className=\"form__switcher hidden\" onClick={togglePassVisible}></div>\n                </div>\n                <div className=\"form__label\">\n                    <div className=\"form__label__title\">* Повторите пароль</div>\n                    <input type=\"password\" key=\"repeatPass\" value={repeatPass} onChange={e => setRepeatPass(e.target.value)}/>\n                </div>\n                <div className=\"form__more\">\n                    <div className=\"form__more__container\">\n                        <label className=\"form__label\">\n                            <div className=\"form__label__title\">Фамилия</div>\n                            <input type=\"text\" key=\"surName\" placeholder=\"Петров\" value={surName} onChange={e => setSurName(e.target.value)}/>\n                        </label>\n                        <label className=\"form__label\">\n                            <div className=\"form__label__title\">Возраст</div>\n                            <input type=\"text\" key=\"age\" value={age} onChange={e => setAge(e.target.value)} placeholder=\"21 год\"/>\n                        </label>\n                        <label className=\"form__label\">\n                            <div className=\"form__label__title\">Пол</div>\n                            <select value={sex} key=\"sex\" onChange={e => setSex(e.target.value)}>\n                                <option value=\"Male\">Мужской</option>\n                                <option value=\"Female\">Женский</option>\n                            </select>\n                        </label>\n                        <label className=\"form__label\">\n                            <div className=\"form__label__title\">Город</div>\n                            <select value={city} key=\"city\" onChange={e => setCity(e.target.value)}>\n                                <option value=\"Ufa\">Уфа</option>\n                                <option value=\"Another\">Другие города</option>\n                            </select>\n                        </label>\n                        <label className=\"form__label\">\n                            <div className=\"form__label__title\">Телефон</div>\n                            <input type=\"text\" key=\"number\" value={number} onChange={e => setNumber(e.target.value)} placeholder=\"+7(800) 555-55-55\"/>\n                        </label>\n                    </div>\n                    <div className=\"form__more__title\"></div>\n                </div> */}"]},"metadata":{},"sourceType":"module"}